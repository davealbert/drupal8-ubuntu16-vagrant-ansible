---
- hosts: all
  become: yes
  vars:
    packages:
      - nginx
      - mariadb-server
      - mariadb-client
      - python-mysqldb
      - curl
      - wget
      - php7.0-fpm
      - php7.0-mbstring
      - php7.0-xml
      - php7.0-mysql
      - php7.0-common
      - php7.0-gd
      - php7.0-json
      - php7.0-cli
      - php7.0-curl

    services:
      - nginx
      - mysql
      - php7.0-fpm

    drupal_directory: drupal-8.2.4
    drupal_file: drupal-8.2.4.tar.gz
    drupal_url: "https://ftp.drupal.org/files/projects/{{ drupal_file }}"
    mysql_root_password: mypass123
    mysql_user: drupal

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted enabled=yes

  tasks:
    ###
    # Update/Upgrade Ubuntu
    ###
    - name: updates a server
      apt: update_cache=yes

    - name: upgrade a server
      apt: upgrade=full

    ###
    # Install packages and Enable services
    ###
    - name: Install packages
      apt: pkg={{ item }} state=installed update_cache=no
      with_items:
        - "{{ packages }}"

    - name: Ensure services are running
      service: name={{ item }} enabled=yes state=started
      tags: mysql
      with_items:
        - "{{ services }}"

    ###
    # MariaDB setup
    ###
    - name: Sets the root password
      mysql_user: user=root password="{{ mysql_root_password }}" host=localhost encrypted=no update_password=always

    - name: Sets the {{ mysql_user }} password
      mysql_user: user="{{ mysql_user }}" password="{{ mysql_root_password }}" host=localhost encrypted=no update_password=always

    - name: Deletes anonymous MySQL server user for ansible_fqdn
      mysql_user: user="" host="{{ ansible_fqdn }}" state="absent"

    - name: Deletes anonymous MySQL server user for localhost
      mysql_user: user="" state="absent"

    - name: Secures the MySQL root user for IPV6 localhost (::1)
      mysql_user: user="root" password="{{ mysql_root_password }}" host="::1"

    - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
      mysql_user: user="root" password="{{ mysql_root_password }}" host="127.0.0.1"

    - name: Secures the MySQL root user for localhost domain (localhost)
      mysql_user: user="root" password="{{ mysql_root_password }}" host="localhost"

    - name: Secures the MySQL root user for server_hostname domain
      mysql_user: user="root" password="{{ mysql_root_password }}" host="{{ ansible_fqdn }}"

    - name: Removes the MySQL test database
      mysql_db: db=test state=absent

    ###
    # PHP/nginx config
    ###
    - name: Add php file
      copy: src="index.php" dest="/var/www/html"

    - name: Add nginx config file
      copy: src="default-php-nginx" dest="/etc/nginx/sites-available/"
      notify: restart nginx

    - name: Remove default nginx file
      file: path="/etc/nginx/sites-enabled/default" state=absent
      notify: restart nginx

    - name: Link to new nginx file
      file:
        state: link
        src: /etc/nginx/sites-available/default-php-nginx
        dest: /etc/nginx/sites-enabled/default-php-nginx
      notify: restart nginx

    ###
    # Drupal install
    ###
    - name: Get Drupal file
      get_url: url={{ drupal_url }} dest=/usr/src/

    - name: untar Drupal
      unarchive: src="/usr/src/{{ drupal_file }}" dest=/usr/src/ remote_src=yes

    - name: Copy to html root
      shell: "rsync -a /usr/src/{{ drupal_directory }}/ /var/www/html/"

    - name: Copy settings
      shell: "cp /var/www/html/sites/default/default.settings.php /var/www/html/sites/default/settings.php"

    - name: Permissons on /var/www/html
      file: state=directory owner=www-data dest=/var/www/html recurse=yes

    - name: Create drupal database
      mysql_db: db=drupal state=present

    - name: grant drupal acces to the drupal DB
      mysql_user: name="{{ mysql_user }}" priv="drupal.*:ALL,GRANT" state=present

